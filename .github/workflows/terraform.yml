name: 'CI/CD PRU Pipeline'

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select the environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - stage
          

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    env:
      GENESYSCLOUD_OAUTHCLIENT_ID: ${{secrets.GENESYS_CLIENT_ID }}
      GENESYSCLOUD_OAUTHCLIENT_SECRET: ${{secrets.GENESYS_CLIENT_SECRET }}
      GENESYSCLOUD_REGION: ${{secrets.GENESYS_REGION}}
      environment: stage
      

    # Use the Bash shell cap regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repositor to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_CLIENT_ID }}
        aws-secret-access-key: ${{ secrets.AWS_CLIENT_SECRET }}
        aws-region: ${{secrets.AWS_REGION }}
    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: "Terraform Init"
      run: |
          terraform init \
            -backend-config="bucket=test-terraform-bucket-${{ github.event.inputs.environment }}-1010" \
            -backend-config="key=path/${{ github.event.inputs.environment }}/state.tfstate" \
            -backend-config="region=ap-south-1"

    # Check that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt
    
    - name: 'Terraform Validate'
      run: terraform destroy

    
